{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c1ee194d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.neighbors import KNeighborsRegressor,KNeighborsClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression,LogisticRegression\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "from scipy.stats import linregress\n",
    "from sklearn.metrics import accuracy_score,confusion_matrix,mean_squared_error\n",
    "from sklearn.svm import SVR,SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "de528c8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State_Name</th>\n",
       "      <th>District_Name</th>\n",
       "      <th>Crop_Year</th>\n",
       "      <th>Season</th>\n",
       "      <th>Crop</th>\n",
       "      <th>Area</th>\n",
       "      <th>Production</th>\n",
       "      <th>Annual_Rainfall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andaman and Nicobar Islands</td>\n",
       "      <td>NICOBARS</td>\n",
       "      <td>2000</td>\n",
       "      <td>Kharif</td>\n",
       "      <td>Rice</td>\n",
       "      <td>102.0</td>\n",
       "      <td>321.00</td>\n",
       "      <td>2763.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Andaman and Nicobar Islands</td>\n",
       "      <td>NORTH AND MIDDLE ANDAMAN</td>\n",
       "      <td>2000</td>\n",
       "      <td>Kharif</td>\n",
       "      <td>Rice</td>\n",
       "      <td>10779.0</td>\n",
       "      <td>31863.00</td>\n",
       "      <td>2763.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Andaman and Nicobar Islands</td>\n",
       "      <td>NICOBARS</td>\n",
       "      <td>2001</td>\n",
       "      <td>Kharif</td>\n",
       "      <td>Rice</td>\n",
       "      <td>83.0</td>\n",
       "      <td>300.00</td>\n",
       "      <td>3080.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andaman and Nicobar Islands</td>\n",
       "      <td>NORTH AND MIDDLE ANDAMAN</td>\n",
       "      <td>2001</td>\n",
       "      <td>Kharif</td>\n",
       "      <td>Rice</td>\n",
       "      <td>9718.0</td>\n",
       "      <td>27033.00</td>\n",
       "      <td>3080.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Andaman and Nicobar Islands</td>\n",
       "      <td>NICOBARS</td>\n",
       "      <td>2002</td>\n",
       "      <td>Kharif</td>\n",
       "      <td>Rice</td>\n",
       "      <td>189.2</td>\n",
       "      <td>510.84</td>\n",
       "      <td>2620.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60428</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>PURULIA</td>\n",
       "      <td>2014</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Groundnut</td>\n",
       "      <td>30.0</td>\n",
       "      <td>25.00</td>\n",
       "      <td>1261.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60429</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>PURULIA</td>\n",
       "      <td>2014</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Potato</td>\n",
       "      <td>477.0</td>\n",
       "      <td>9995.00</td>\n",
       "      <td>1261.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60430</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>PURULIA</td>\n",
       "      <td>2014</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Wheat</td>\n",
       "      <td>1622.0</td>\n",
       "      <td>3663.00</td>\n",
       "      <td>1261.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60431</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>PURULIA</td>\n",
       "      <td>2014</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rice</td>\n",
       "      <td>306.0</td>\n",
       "      <td>801.00</td>\n",
       "      <td>1261.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60432</th>\n",
       "      <td>West Bengal</td>\n",
       "      <td>PURULIA</td>\n",
       "      <td>2014</td>\n",
       "      <td>Winter</td>\n",
       "      <td>Rice</td>\n",
       "      <td>279151.0</td>\n",
       "      <td>597899.00</td>\n",
       "      <td>1261.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>60433 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        State_Name             District_Name  Crop_Year  \\\n",
       "0      Andaman and Nicobar Islands                  NICOBARS       2000   \n",
       "1      Andaman and Nicobar Islands  NORTH AND MIDDLE ANDAMAN       2000   \n",
       "2      Andaman and Nicobar Islands                  NICOBARS       2001   \n",
       "3      Andaman and Nicobar Islands  NORTH AND MIDDLE ANDAMAN       2001   \n",
       "4      Andaman and Nicobar Islands                  NICOBARS       2002   \n",
       "...                            ...                       ...        ...   \n",
       "60428                  West Bengal                   PURULIA       2014   \n",
       "60429                  West Bengal                   PURULIA       2014   \n",
       "60430                  West Bengal                   PURULIA       2014   \n",
       "60431                  West Bengal                   PURULIA       2014   \n",
       "60432                  West Bengal                   PURULIA       2014   \n",
       "\n",
       "       Season       Crop      Area  Production  Annual_Rainfall  \n",
       "0      Kharif       Rice     102.0      321.00           2763.2  \n",
       "1      Kharif       Rice   10779.0    31863.00           2763.2  \n",
       "2      Kharif       Rice      83.0      300.00           3080.9  \n",
       "3      Kharif       Rice    9718.0    27033.00           3080.9  \n",
       "4      Kharif       Rice     189.2      510.84           2620.2  \n",
       "...       ...        ...       ...         ...              ...  \n",
       "60428    Rabi  Groundnut      30.0       25.00           1261.4  \n",
       "60429    Rabi     Potato     477.0     9995.00           1261.4  \n",
       "60430    Rabi      Wheat    1622.0     3663.00           1261.4  \n",
       "60431  Summer       Rice     306.0      801.00           1261.4  \n",
       "60432  Winter       Rice  279151.0   597899.00           1261.4  \n",
       "\n",
       "[60433 rows x 8 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = pd.read_csv(\"cleaned_Crop_data.csv\")\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "16efee0e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Onion           1736\n",
       "Rice            1611\n",
       "Potato          1276\n",
       "Wheat           1275\n",
       "Bajra           1174\n",
       "Groundnut        958\n",
       "Soyabean         327\n",
       "Cotton(lint)     221\n",
       "Jute              11\n",
       "Name: Crop, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state = \"Uttar Pradesh\"\n",
    "State_data= dataset.query(f\"State_Name == '{state}'\")\n",
    "State_data[\"Crop\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "7313b661",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State_Name</th>\n",
       "      <th>District_Name</th>\n",
       "      <th>Crop_Year</th>\n",
       "      <th>Season</th>\n",
       "      <th>Crop</th>\n",
       "      <th>Area</th>\n",
       "      <th>Production</th>\n",
       "      <th>Annual_Rainfall</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>47987</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>AGRA</td>\n",
       "      <td>1997</td>\n",
       "      <td>Whole Year</td>\n",
       "      <td>Potato</td>\n",
       "      <td>14430.0</td>\n",
       "      <td>397344.0</td>\n",
       "      <td>493.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47995</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>AGRA</td>\n",
       "      <td>1998</td>\n",
       "      <td>Whole Year</td>\n",
       "      <td>Potato</td>\n",
       "      <td>18971.0</td>\n",
       "      <td>651919.0</td>\n",
       "      <td>887.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48002</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>ALIGARH</td>\n",
       "      <td>1998</td>\n",
       "      <td>Whole Year</td>\n",
       "      <td>Potato</td>\n",
       "      <td>5503.0</td>\n",
       "      <td>116886.0</td>\n",
       "      <td>887.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48008</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>ALLAHABAD</td>\n",
       "      <td>1998</td>\n",
       "      <td>Whole Year</td>\n",
       "      <td>Potato</td>\n",
       "      <td>13093.0</td>\n",
       "      <td>342644.0</td>\n",
       "      <td>887.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48014</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>AMBEDKAR NAGAR</td>\n",
       "      <td>1998</td>\n",
       "      <td>Whole Year</td>\n",
       "      <td>Potato</td>\n",
       "      <td>5049.0</td>\n",
       "      <td>99463.0</td>\n",
       "      <td>887.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56542</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>VARANASI</td>\n",
       "      <td>2010</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Potato</td>\n",
       "      <td>3465.0</td>\n",
       "      <td>61199.0</td>\n",
       "      <td>820.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56547</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>VARANASI</td>\n",
       "      <td>2011</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Potato</td>\n",
       "      <td>3344.0</td>\n",
       "      <td>60153.0</td>\n",
       "      <td>781.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56554</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>VARANASI</td>\n",
       "      <td>2012</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Potato</td>\n",
       "      <td>3355.0</td>\n",
       "      <td>59669.0</td>\n",
       "      <td>602.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56560</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>UNNAO</td>\n",
       "      <td>2014</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Potato</td>\n",
       "      <td>9838.0</td>\n",
       "      <td>199653.0</td>\n",
       "      <td>681.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56567</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>VARANASI</td>\n",
       "      <td>2014</td>\n",
       "      <td>Rabi</td>\n",
       "      <td>Potato</td>\n",
       "      <td>3237.0</td>\n",
       "      <td>55612.0</td>\n",
       "      <td>681.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1276 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          State_Name   District_Name  Crop_Year      Season    Crop     Area  \\\n",
       "47987  Uttar Pradesh            AGRA       1997  Whole Year  Potato  14430.0   \n",
       "47995  Uttar Pradesh            AGRA       1998  Whole Year  Potato  18971.0   \n",
       "48002  Uttar Pradesh         ALIGARH       1998  Whole Year  Potato   5503.0   \n",
       "48008  Uttar Pradesh       ALLAHABAD       1998  Whole Year  Potato  13093.0   \n",
       "48014  Uttar Pradesh  AMBEDKAR NAGAR       1998  Whole Year  Potato   5049.0   \n",
       "...              ...             ...        ...         ...     ...      ...   \n",
       "56542  Uttar Pradesh        VARANASI       2010        Rabi  Potato   3465.0   \n",
       "56547  Uttar Pradesh        VARANASI       2011        Rabi  Potato   3344.0   \n",
       "56554  Uttar Pradesh        VARANASI       2012        Rabi  Potato   3355.0   \n",
       "56560  Uttar Pradesh           UNNAO       2014        Rabi  Potato   9838.0   \n",
       "56567  Uttar Pradesh        VARANASI       2014        Rabi  Potato   3237.0   \n",
       "\n",
       "       Production  Annual_Rainfall  \n",
       "47987    397344.0            493.3  \n",
       "47995    651919.0            887.2  \n",
       "48002    116886.0            887.2  \n",
       "48008    342644.0            887.2  \n",
       "48014     99463.0            887.2  \n",
       "...           ...              ...  \n",
       "56542     61199.0            820.7  \n",
       "56547     60153.0            781.2  \n",
       "56554     59669.0            602.7  \n",
       "56560    199653.0            681.2  \n",
       "56567     55612.0            681.2  \n",
       "\n",
       "[1276 rows x 8 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crop = \"Potato\"\n",
    "State_data=State_data.query(f\"Crop =='{crop}'\")\n",
    "State_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "bcc193ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "scaler = MinMaxScaler()\n",
    "train_size = int(len(State_data)*0.8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5beb7b28",
   "metadata": {},
   "outputs": [],
   "source": [
    "X=State_data[[\"Crop_Year\",\"Area\",\"Annual_Rainfall\"]]\n",
    "Y = State_data[\"Production\"]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c2569cfa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(893, 3)\n",
      "(893,)\n",
      "(383, 3)\n",
      "(383,)\n"
     ]
    }
   ],
   "source": [
    "xtrain,xtest,ytrain,ytest = train_test_split(X,Y,random_state=12,train_size=0.7)\n",
    "print(xtrain.shape)\n",
    "print(ytrain.shape)\n",
    "print(xtest.shape)\n",
    "print(ytest.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ea2141e",
   "metadata": {},
   "source": [
    "## Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bce01ddf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 30400.131614817295\n",
      "MSE: 2344100224.678354\n",
      "RMSE: 48415.90879740206\n",
      "R2: 0.9605379822895699\n"
     ]
    }
   ],
   "source": [
    "#Linear Regression\n",
    "Lin_Reg_Model = LinearRegression()\n",
    "Lin_Reg_Model = Lin_Reg_Model.fit(xtrain, ytrain)\n",
    "Lin_Pred = Lin_Reg_Model.predict(xtest)\n",
    "\n",
    "mse = mean_squared_error(Lin_Pred, ytest)\n",
    "r2 = r2_score(ytest, Lin_Pred)\n",
    "\n",
    "plt.scatter(Lin_Pred, ytest)\n",
    "plt.plot([min(ytest), max(ytest)], [min(ytest), max(ytest)], '--k')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Linear Regression\\nMSE: {:.2f}, R2: {:.2f}'.format(mse, r2))\n",
    "plt.show()\n",
    "\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "\n",
    "# Compute the predictions of your model (Lin_Pred)\n",
    "\n",
    "# Compute the mean absolute error\n",
    "MAE = mean_absolute_error(ytest, Lin_Pred)\n",
    "\n",
    "# Compute the mean squared error\n",
    "MSE = mean_squared_error(ytest, Lin_Pred)\n",
    "\n",
    "# Compute the root mean squared error\n",
    "RMSE = mean_squared_error(ytest,Lin_Pred, squared=False)\n",
    "\n",
    "# Compute the R-squared score\n",
    "R2 = r2_score(ytest,Lin_Pred)\n",
    "\n",
    "print(\"MAE:\", MAE)\n",
    "print(\"MSE:\", MSE)\n",
    "print(\"RMSE:\", RMSE)\n",
    "print(\"R2:\", R2)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a8f5639",
   "metadata": {},
   "source": [
    "## KNN Regression\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "38bc6346",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 25532.289164490863\n",
      "MSE: 2138607675.632996\n",
      "RMSE: 46245.082718414465\n",
      "R2: 0.9639973696162795\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "from sklearn.metrics import r2_score\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "KNN_Model = KNeighborsRegressor()\n",
    "\n",
    "# Try k values from 1 to 30\n",
    "k_values = range(1, 31)\n",
    "\n",
    "r2_scores = []\n",
    "for k in k_values:\n",
    "    KNN_Model.set_params(n_neighbors=k)\n",
    "    KNN_Model.fit(xtrain, ytrain)\n",
    "    KNN_Pred = KNN_Model.predict(xtest)\n",
    "    r2 = r2_score(ytest, KNN_Pred)\n",
    "    r2_scores.append(r2)\n",
    "    \n",
    "\n",
    "\n",
    "# Plot the R-squared scores for different k values\n",
    "plt.plot(k_values, r2_scores)\n",
    "plt.xlabel('k')\n",
    "plt.ylabel('R-squared score')\n",
    "plt.title('R-squared score vs. k')\n",
    "plt.show()\n",
    "\n",
    "KNN_Model = KNeighborsRegressor(n_neighbors=4)  # Set k=5\n",
    "\n",
    "# Fit the model\n",
    "KNN_Model.fit(xtrain, ytrain)\n",
    "\n",
    "# Make predictions\n",
    "KNN_Pred = KNN_Model.predict(xtest)\n",
    "\n",
    "# Compute the R-squared score\n",
    "r2 = r2_score(ytest, KNN_Pred)\n",
    "\n",
    "# Compute the mean absolute error\n",
    "MAE = mean_absolute_error(ytest, KNN_Pred)\n",
    "\n",
    "# Compute the mean squared error\n",
    "MSE = mean_squared_error(ytest, KNN_Pred)\n",
    "\n",
    "# Compute the root mean squared error\n",
    "RMSE = mean_squared_error(ytest, KNN_Pred, squared=False)\n",
    "\n",
    "# Plot the predicted values against the actual values\n",
    "plt.scatter(KNN_Pred, ytest)\n",
    "plt.plot([min(ytest), max(ytest)], [min(ytest), max(ytest)], '--k')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('KNN Regression\\nMSE: {:.2f}, R2: {:.2f}'.format(MSE, r2))\n",
    "plt.show()\n",
    "\n",
    "print(\"MAE:\", MAE)\n",
    "print(\"MSE:\", MSE)\n",
    "print(\"RMSE:\", RMSE)\n",
    "print(\"R2:\", r2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b808a85e",
   "metadata": {},
   "source": [
    "## SVM Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2b434d97",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean_Squared_error : 2440351277.4676147\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 26688.926940729583\n",
      "MSE: 2440351277.4676147\n",
      "RMSE: 49399.911715180366\n",
      "R2: 0.9589176331637818\n"
     ]
    }
   ],
   "source": [
    "#SVM\n",
    "SV_Reg_Model = SVR(kernel='linear')\n",
    "SV_Reg_Model = SV_Reg_Model.fit(xtrain,ytrain)\n",
    "SV_Pred = SV_Reg_Model.predict(xtest)\n",
    "print(\"Mean_Squared_error :\",mean_squared_error(SV_Pred,ytest))\n",
    "\n",
    "mse = mean_squared_error(SV_Pred, ytest)\n",
    "r2 = r2_score(ytest, SV_Pred)\n",
    "plt.scatter(SV_Pred, ytest)\n",
    "plt.plot([min(ytest), max(ytest)], [min(ytest), max(ytest)], '--k')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('SVM Regression\\nMSE: {:.2f}, R2: {:.2f}'.format(mse, r2))\n",
    "plt.show()\n",
    "\n",
    "# Compute the mean absolute error\n",
    "MAE = mean_absolute_error(ytest, SV_Pred)\n",
    "\n",
    "# Compute the mean squared error\n",
    "MSE = mean_squared_error(ytest, SV_Pred)\n",
    "\n",
    "# Compute the root mean squared error\n",
    "RMSE = mean_squared_error(ytest, SV_Pred, squared=False)\n",
    "\n",
    "# Compute the R-squared score\n",
    "R2 = r2_score(ytest, SV_Pred)\n",
    "\n",
    "print(\"MAE:\", MAE)\n",
    "print(\"MSE:\", MSE)\n",
    "print(\"RMSE:\", RMSE)\n",
    "print(\"R2:\", R2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07c249f7",
   "metadata": {},
   "source": [
    "## Random Forest Regression "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "9670ba70",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error: 2185693636.8636785\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 25655.806783289816\n",
      "MSE: 2185693636.8636785\n",
      "RMSE: 46751.40251226351\n",
      "R2: 0.963204695729542\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a Random Forest model with 100 trees\n",
    "rf_model = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "\n",
    "# Train the model on the training data\n",
    "rf_model.fit(xtrain, ytrain)\n",
    "\n",
    "# Make predictions on the test data\n",
    "rf_pred = rf_model.predict(xtest)\n",
    "\n",
    "# Calculate the mean squared error\n",
    "mse = mean_squared_error(ytest, rf_pred)\n",
    "print(\"Mean Squared Error:\", mse)\n",
    "r2_score = rf_model.score(xtest, ytest)\n",
    "# Create a scatter plot of predicted vs actual values\n",
    "plt.scatter(rf_pred, ytest)\n",
    "plt.plot([min(ytest), max(ytest)], [min(ytest), max(ytest)], '--k')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Random Forest Regression')\n",
    "plt.text(np.min(rf_pred), np.max(ytest), f\"R-squared: {r2_score:.2f}\")\n",
    "\n",
    "plt.show()\n",
    "\n",
    "\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "\n",
    "# Compute the predictions of your model (rf_pred)\n",
    "\n",
    "# Compute the mean absolute error\n",
    "MAE = mean_absolute_error(ytest, rf_pred)\n",
    "\n",
    "# Compute the mean squared error\n",
    "MSE = mean_squared_error(ytest,rf_pred)\n",
    "\n",
    "# Compute the root mean squared error\n",
    "RMSE = mean_squared_error(ytest, rf_pred, squared=False)\n",
    "\n",
    "# Compute the R-squared score\n",
    "R2 = r2_score(ytest,rf_pred)\n",
    "\n",
    "print(\"MAE:\", MAE)\n",
    "print(\"MSE:\", MSE)\n",
    "print(\"RMSE:\", RMSE)\n",
    "print(\"R2:\", R2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "6b11ebfd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "from tkinter import ttk\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "# Read the dataset\n",
    "dataset = pd.read_csv(\"cleaned_Crop_data.csv\")\n",
    "\n",
    "# Create a GUI using Tkinter\n",
    "window = tk.Tk()\n",
    "window.title(\"Crop Production Prediction\")\n",
    "window.geometry(\"400x300\")\n",
    "\n",
    "# Function to update the crop dropdown based on the selected state\n",
    "def update_crop_dropdown(*args):\n",
    "    selected_state = state_dropdown.get()\n",
    "\n",
    "    # Filter dataset based on the selected state\n",
    "    crop_options = dataset.loc[dataset['State_Name'] == selected_state, 'Crop'].unique().tolist()\n",
    "\n",
    "    # Clear and update the crop dropdown options\n",
    "    crop_dropdown['values'] = crop_options\n",
    "    crop_dropdown.set(\"\")  # Clear the currently selected value\n",
    "\n",
    "# Function to predict production based on the selected state, crop, area, and rainfall\n",
    "def predict_production():\n",
    "    state = state_dropdown.get()\n",
    "    crop = crop_dropdown.get()\n",
    "    area = float(entry_area.get())\n",
    "    rainfall = float(entry_rainfall.get())\n",
    "\n",
    "    # Filter data for selected state, crop, and year\n",
    "    State_data = dataset.query(f\"State_Name == '{state}'\")\n",
    "    State_data = State_data.query(f\"Crop == '{crop}'\")\n",
    "\n",
    "    # Select features and target\n",
    "    X = State_data[[\"Crop_Year\", \"Area\", \"Annual_Rainfall\"]]\n",
    "    Y = State_data[\"Production\"]\n",
    "\n",
    "    # Split data into training and testing sets\n",
    "    xtrain, xtest, ytrain, ytest = train_test_split(X, Y, random_state=12, train_size=0.7)\n",
    "\n",
    "    # Create a Random Forest regression model with 100 trees\n",
    "    rf_model = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "\n",
    "    # Train the model on the training data\n",
    "    rf_model.fit(xtrain, ytrain)\n",
    "\n",
    "    # Make a prediction\n",
    "    prediction = rf_model.predict([[2023, area, rainfall]])  # Example: Use the year 2023 for prediction\n",
    "\n",
    "    # Display the prediction in a messagebox\n",
    "    messagebox.showinfo(\"Prediction Result\", f\"Predicted Production: {prediction[0]}\")\n",
    "\n",
    "# Define the dropdown list options\n",
    "state_options = dataset['State_Name'].unique().tolist()\n",
    "\n",
    "# Create the state dropdown widget\n",
    "state_label = tk.Label(window, text=\"State:\")\n",
    "state_label.pack()\n",
    "state_dropdown = ttk.Combobox(window, values=state_options, width=25)\n",
    "state_dropdown.pack(pady=5)\n",
    "\n",
    "# Create the crop dropdown widget\n",
    "crop_label = tk.Label(window, text=\"Crop:\")\n",
    "crop_label.pack()\n",
    "crop_dropdown = ttk.Combobox(window, width=25)\n",
    "crop_dropdown.pack(pady=5)\n",
    "\n",
    "# Link the crop dropdown to the state dropdown selection\n",
    "state_dropdown.bind(\"<<ComboboxSelected>>\", update_crop_dropdown)\n",
    "\n",
    "# Create input fields and button in the GUI\n",
    "area_label = tk.Label(window, text=\"Area:\")\n",
    "area_label.pack()\n",
    "entry_area = tk.Entry(window, width=30)\n",
    "entry_area.pack(pady=5)\n",
    "\n",
    "rainfall_label = tk.Label(window, text=\"Rainfall:\")\n",
    "rainfall_label.pack()\n",
    "entry_rainfall = tk.Entry(window, width=30)\n",
    "entry_rainfall.pack(pady=5)\n",
    "\n",
    "button_predict = tk.Button(window, text=\"Predict\", command=predict_production, width=30, bg=\"#4CAF50\", fg=\"white\")\n",
    "button_predict.pack(pady=10)\n",
    "\n",
    "# Run the GUI\n",
    "window.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "504f4995",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "from tkinter import ttk\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "# Read the dataset\n",
    "dataset = pd.read_csv(\"cleaned_Crop_data.csv\")\n",
    "\n",
    "# Create a GUI using Tkinter\n",
    "window = tk.Tk()\n",
    "window.title(\"Crop Production Prediction\")\n",
    "window.geometry(\"400x300\")\n",
    "\n",
    "# Function to update the crop dropdown based on the selected state\n",
    "def update_crop_dropdown(*args):\n",
    "    selected_state = state_dropdown.get()\n",
    "\n",
    "    # Filter dataset based on the selected state\n",
    "    crop_options = dataset.loc[dataset['State_Name'] == selected_state, 'Crop'].unique().tolist()\n",
    "\n",
    "    # Clear and update the crop dropdown options\n",
    "    crop_dropdown['values'] = crop_options\n",
    "    crop_dropdown.set(\"\")  # Clear the currently selected value\n",
    "\n",
    "# Function to predict production based on the selected state, crop, area, and rainfall\n",
    "def predict_production():\n",
    "    state = state_dropdown.get()\n",
    "    crop = crop_dropdown.get()\n",
    "    area = float(entry_area.get())\n",
    "    rainfall = float(entry_rainfall.get())\n",
    "\n",
    "    # Filter data for selected state, crop, and year\n",
    "    State_data = dataset.query(f\"State_Name == '{state}'\")\n",
    "    State_data = State_data.query(f\"Crop == '{crop}'\")\n",
    "\n",
    "    # Select features and target\n",
    "    X = State_data[[\"Crop_Year\", \"Area\", \"Annual_Rainfall\"]]\n",
    "    Y = State_data[\"Production\"]\n",
    "\n",
    "    # Split data into training and testing sets\n",
    "    xtrain, xtest, ytrain, ytest = train_test_split(X, Y, random_state=12, train_size=0.7)\n",
    "\n",
    "    # Create a KNN regression model with k=5\n",
    "    knn_model = KNeighborsRegressor()\n",
    "\n",
    "    # Train the model on the training data\n",
    "    knn_model.fit(xtrain, ytrain)\n",
    "\n",
    "    # Make a prediction\n",
    "    prediction = knn_model.predict([[2023, area, rainfall]])  # Example: Use the year 2023 for prediction\n",
    "\n",
    "    # Display the prediction in a messagebox\n",
    "    messagebox.showinfo(\"Prediction Result\", f\"Predicted Production: {prediction[0]}\")\n",
    "\n",
    "# Define the dropdown list options\n",
    "state_options = dataset['State_Name'].unique().tolist()\n",
    "\n",
    "# Create the state dropdown widget\n",
    "state_label = tk.Label(window, text=\"State:\")\n",
    "state_label.pack()\n",
    "state_dropdown = ttk.Combobox(window, values=state_options, width=25)\n",
    "state_dropdown.pack(pady=5)\n",
    "\n",
    "# Create the crop dropdown widget\n",
    "crop_label = tk.Label(window, text=\"Crop:\")\n",
    "crop_label.pack()\n",
    "crop_dropdown = ttk.Combobox(window, width=25)\n",
    "crop_dropdown.pack(pady=5)\n",
    "\n",
    "# Link the crop dropdown to the state dropdown selection\n",
    "state_dropdown.bind(\"<<ComboboxSelected>>\", update_crop_dropdown)\n",
    "\n",
    "# Create input fields and button in the GUI\n",
    "area_label = tk.Label(window, text=\"Area:\")\n",
    "area_label.pack()\n",
    "entry_area = tk.Entry(window, width=30)\n",
    "entry_area.pack(pady=5)\n",
    "\n",
    "rainfall_label = tk.Label(window, text=\"Rainfall:\")\n",
    "rainfall_label.pack()\n",
    "entry_rainfall = tk.Entry(window, width=30)\n",
    "entry_rainfall.pack(pady=5)\n",
    "\n",
    "button_predict = tk.Button(window, text=\"Predict\", command=predict_production, width=30, bg=\"#4CAF50\", fg=\"white\")\n",
    "button_predict.pack(pady=10)\n",
    "\n",
    "# Run the GUI\n",
    "window.mainloop()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c1e7afb4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "from tkinter import ttk\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "# Read the dataset\n",
    "dataset = pd.read_csv(\"cleaned_Crop_data.csv\")\n",
    "\n",
    "# Create a GUI using Tkinter\n",
    "window = tk.Tk()\n",
    "window.title(\"Crop Production Prediction\")\n",
    "window.geometry(\"400x400\")\n",
    "\n",
    "\n",
    "# Function to update the crop dropdown based on the selected state\n",
    "def update_crop_dropdown(*args):\n",
    "    selected_state = state_dropdown.get()\n",
    "\n",
    "    # Filter dataset based on the selected state\n",
    "    crop_options = dataset.loc[dataset['State_Name'] == selected_state, 'Crop'].unique().tolist()\n",
    "\n",
    "    # Clear and update the crop dropdown options\n",
    "    crop_dropdown['values'] = crop_options\n",
    "    crop_dropdown.set(\"\")  # Clear the currently selected value\n",
    "\n",
    "# Function to predict production based on the selected state, crop, area, and rainfall\n",
    "def predict_production():\n",
    "    state = state_dropdown.get()\n",
    "    crop = crop_dropdown.get()\n",
    "    area = float(entry_area.get())\n",
    "    rainfall = float(entry_rainfall.get())\n",
    "\n",
    "    # Filter data for selected state, crop, and year\n",
    "    State_data = dataset.query(f\"State_Name == '{state}'\")\n",
    "    State_data = State_data.query(f\"Crop == '{crop}'\")\n",
    "\n",
    "    # Select features and target\n",
    "    X = State_data[[\"Crop_Year\", \"Area\", \"Annual_Rainfall\"]]\n",
    "    Y = State_data[\"Production\"]\n",
    "\n",
    "    # Split data into training and testing sets\n",
    "    xtrain, xtest, ytrain, ytest = train_test_split(X, Y, random_state=12, train_size=0.7)\n",
    "\n",
    "    # Create a KNN regression model with k=5\n",
    "    knn_model = KNeighborsRegressor()\n",
    "\n",
    "    # Train the model on the training data\n",
    "    knn_model.fit(xtrain, ytrain)\n",
    "\n",
    "    # Make a prediction\n",
    "    prediction = knn_model.predict([[2023, area, rainfall]])  # Example: Use the year 2023 for prediction\n",
    "\n",
    "    # Update the output label with the prediction result\n",
    "    output_label.configure(text=f\"Predicted Production: {prediction[0]}\")\n",
    "\n",
    "# Function to submit the prediction\n",
    "def submit_prediction():\n",
    "    if not state_dropdown.get() or not crop_dropdown.get() or not entry_area.get() or not entry_rainfall.get():\n",
    "        messagebox.showwarning(\"Error\", \"Please fill in all the fields.\")\n",
    "    else:\n",
    "        predict_production()\n",
    "\n",
    "# Define the dropdown list options\n",
    "state_options = dataset['State_Name'].unique().tolist()\n",
    "\n",
    "# Create the state dropdown widget\n",
    "state_label = tk.Label(window, text=\"State:\")\n",
    "state_label.pack()\n",
    "state_dropdown = ttk.Combobox(window, values=state_options, width=25)\n",
    "state_dropdown.pack(pady=5)\n",
    "\n",
    "# Create the crop dropdown widget\n",
    "crop_label = tk.Label(window, text=\"Crop:\")\n",
    "crop_label.pack()\n",
    "crop_dropdown = ttk.Combobox(window, width=25)\n",
    "crop_dropdown.pack(pady=5)\n",
    "\n",
    "# Link the crop dropdown to the state dropdown selection\n",
    "state_dropdown.bind(\"<<ComboboxSelected>>\", update_crop_dropdown)\n",
    "\n",
    "# Create input fields in the GUI\n",
    "area_label = tk.Label(window, text=\"Area (in hactares)\")\n",
    "area_label.pack()\n",
    "entry_area = tk.Entry(window, width=30)\n",
    "entry_area.pack(pady=5)\n",
    "\n",
    "rainfall_label = tk.Label(window, text=\"Rainfall (in mm)\")\n",
    "rainfall_label.pack()\n",
    "entry_rainfall = tk.Entry(window, width=30)\n",
    "entry_rainfall.pack(pady=5)\n",
    "\n",
    "# Create output label in the GUI\n",
    "output_label = tk.Label(window, text=\"\")\n",
    "output_label.pack(pady=5)\n",
    "# Create submit button in the GUI\n",
    "submit_button = tk.Button(window, text=\"Submit\", command=submit_prediction, width=30, bg=\"#4CAF50\", fg=\"white\")\n",
    "submit_button.pack(pady=10)\n",
    "\n",
    "# Run the GUI\n",
    "window.mainloop()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "dcf212c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3a28cd5e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n",
      "c:\\users\\mukul kumar\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but KNeighborsRegressor was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "from tkinter import ttk\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "\n",
    "# Read the dataset\n",
    "dataset = pd.read_csv(\"cleaned_Crop_data.csv\")\n",
    "\n",
    "# Create a GUI using Tkinter\n",
    "window = tk.Tk()\n",
    "window.title(\"Crop Production Prediction\")\n",
    "window.geometry(\"400x400\")\n",
    "\n",
    "\n",
    "# Function to update the crop dropdown based on the selected state\n",
    "def update_crop_dropdown(*args):\n",
    "    selected_state = state_dropdown.get()\n",
    "\n",
    "    # Filter dataset based on the selected state\n",
    "    crop_options = dataset.loc[dataset['State_Name'] == selected_state, 'Crop'].unique().tolist()\n",
    "\n",
    "    # Clear and update the crop dropdown options\n",
    "    crop_dropdown['values'] = crop_options\n",
    "    crop_dropdown.set(\"\")  # Clear the currently selected value\n",
    "\n",
    "\n",
    "# Function to predict production based on the selected state, crop, area, and rainfall\n",
    "def predict_production():\n",
    "    state = state_dropdown.get()\n",
    "    crop = crop_dropdown.get()\n",
    "    area = float(entry_area.get())\n",
    "    rainfall = float(entry_rainfall.get())\n",
    "\n",
    "    # Filter data for selected state, crop, and year\n",
    "    State_data = dataset.query(f\"State_Name == '{state}'\")\n",
    "    State_data = State_data.query(f\"Crop == '{crop}'\")\n",
    "\n",
    "    # Select features and target\n",
    "    X = State_data[[\"Crop_Year\", \"Area\", \"Annual_Rainfall\"]]\n",
    "    Y = State_data[\"Production\"]\n",
    "\n",
    "    # Split data into training and testing sets\n",
    "    xtrain, xtest, ytrain, ytest = train_test_split(X, Y, random_state=12, train_size=0.7)\n",
    "\n",
    "    # Create a KNN regression model with k=5\n",
    "    knn_model = KNeighborsRegressor()\n",
    "\n",
    "    # Train the model on the training data\n",
    "    knn_model.fit(xtrain, ytrain)\n",
    "\n",
    "    # Make a prediction\n",
    "    prediction = knn_model.predict([[2023, area, rainfall]])  # Example: Use the year 2023 for prediction\n",
    "\n",
    "    # Update the output label with the prediction result\n",
    "    output_label.configure(text=f\"Predicted Production: {prediction[0]} tonnes\")\n",
    "\n",
    "\n",
    "# Function to submit the prediction\n",
    "def submit_prediction():\n",
    "    if not state_dropdown.get() or not crop_dropdown.get() or not entry_area.get() or not entry_rainfall.get():\n",
    "        messagebox.showwarning(\"Error\", \"Please fill in all the fields.\")\n",
    "    else:\n",
    "        predict_production()\n",
    "\n",
    "\n",
    "# Function to clear/reset the input fields\n",
    "def clear_fields():\n",
    "    state_dropdown.set(\"\")\n",
    "    crop_dropdown.set(\"\")\n",
    "    entry_area.delete(0, tk.END)\n",
    "    entry_rainfall.delete(0, tk.END)\n",
    "    output_label.configure(text=\"\")\n",
    "\n",
    "\n",
    "# Function to quit the application\n",
    "def quit_app():\n",
    "    window.destroy()\n",
    "\n",
    "\n",
    "# Define the dropdown list options\n",
    "state_options = dataset['State_Name'].unique().tolist()\n",
    "\n",
    "# Create the state dropdown widget\n",
    "state_label = tk.Label(window, text=\"State:\")\n",
    "state_label.pack()\n",
    "state_dropdown = ttk.Combobox(window, values=state_options, width=25)\n",
    "state_dropdown.pack(pady=5)\n",
    "\n",
    "# Create the crop dropdown widget\n",
    "crop_label = tk.Label(window, text=\"Crop:\")\n",
    "crop_label.pack()\n",
    "crop_dropdown = ttk.Combobox(window, width=25)\n",
    "crop_dropdown.pack(pady=5)\n",
    "\n",
    "# Link the crop dropdown to the state dropdown selection\n",
    "state_dropdown.bind(\"<<ComboboxSelected>>\", update_crop_dropdown)\n",
    "\n",
    "# Create input fields in the GUI\n",
    "area_label = tk.Label(window, text=\"Area (in hectares):\")\n",
    "area_label.pack(pady = 5)\n",
    "\n",
    "entry_area = tk.Entry(window, width=30)\n",
    "entry_area.pack(pady=5)\n",
    "\n",
    "rainfall_label = tk.Label(window, text=\"Rainfall (in mm):\")\n",
    "rainfall_label.pack()\n",
    "entry_rainfall = tk.Entry(window, width=30)\n",
    "entry_rainfall.pack(pady=5)\n",
    "\n",
    "# Create output label in the GUI\n",
    "output_label = tk.Label(window, text=\"\")\n",
    "output_label.pack(pady=5)\n",
    "\n",
    "# Create submit button in the GUI\n",
    "submit_button = tk.Button(window, text=\"Submit\", command=submit_prediction, width=30, bg=\"#4CAF50\", fg=\"white\")\n",
    "submit_button.pack(pady=10)\n",
    "\n",
    "# Create clear/reset button in the GUI\n",
    "clear_button = tk.Button(window, text=\"Clear\", command=clear_fields, width=30)\n",
    "clear_button.pack(pady=5)\n",
    "\n",
    "# Create quit button in the GUI\n",
    "quit_button = tk.Button(window, text=\"Quit\", command=quit_app, width=30)\n",
    "quit_button.pack(pady=5)\n",
    "\n",
    "# Run the GUI\n",
    "window.mainloop()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93dc5582",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
